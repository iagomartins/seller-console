import { LeadStatus, LeadSource, createLead, Lead } from "../types";

const firstNames = [
  "John",
  "Sarah",
  "Mike",
  "Emily",
  "Robert",
  "Lisa",
  "David",
  "Jennifer",
  "Michael",
  "Amanda",
  "James",
  "Jessica",
  "Christopher",
  "Ashley",
  "Daniel",
  "Amanda",
  "Matthew",
  "Brittany",
  "Anthony",
  "Samantha",
  "Mark",
  "Stephanie",
  "Donald",
  "Nicole",
  "Steven",
  "Elizabeth",
  "Paul",
  "Helen",
  "Andrew",
  "Deborah",
  "Joshua",
  "Dorothy",
  "Kenneth",
  "Lisa",
  "Kevin",
  "Nancy",
  "Brian",
  "Karen",
  "George",
  "Betty",
  "Timothy",
  "Sandra",
  "Ronald",
  "Donna",
  "Jason",
  "Carol",
  "Edward",
  "Ruth",
  "Jeffrey",
  "Sharon",
  "Ryan",
  "Michelle",
  "Jacob",
  "Laura",
  "Gary",
  "Sarah",
  "Nicholas",
  "Kimberly",
  "Eric",
  "Deborah",
  "Jonathan",
  "Dorothy",
  "Stephen",
  "Lisa",
  "Larry",
  "Nancy",
  "Justin",
  "Karen",
  "Scott",
  "Betty",
  "Brandon",
  "Helen",
  "Benjamin",
  "Sandra",
  "Samuel",
  "Donna",
  "Gregory",
  "Carol",
  "Alexander",
  "Ruth",
  "Patrick",
  "Sharon",
  "Jack",
  "Michelle",
  "Dennis",
  "Laura",
  "Jerry",
  "Sarah",
  "Tyler",
  "Kimberly",
];

const lastNames = [
  "Smith",
  "Johnson",
  "Williams",
  "Brown",
  "Jones",
  "Garcia",
  "Miller",
  "Davis",
  "Rodriguez",
  "Martinez",
  "Hernandez",
  "Lopez",
  "Gonzalez",
  "Wilson",
  "Anderson",
  "Thomas",
  "Taylor",
  "Moore",
  "Jackson",
  "Martin",
  "Lee",
  "Perez",
  "Thompson",
  "White",
  "Harris",
  "Sanchez",
  "Clark",
  "Ramirez",
  "Lewis",
  "Robinson",
  "Walker",
  "Young",
  "Allen",
  "King",
  "Wright",
  "Scott",
  "Torres",
  "Nguyen",
  "Hill",
  "Flores",
  "Green",
  "Adams",
  "Nelson",
  "Baker",
  "Hall",
  "Rivera",
  "Campbell",
  "Mitchell",
  "Carter",
  "Roberts",
  "Gomez",
  "Phillips",
  "Evans",
  "Turner",
  "Diaz",
  "Parker",
  "Cruz",
  "Edwards",
  "Collins",
  "Reyes",
  "Stewart",
  "Morris",
  "Morales",
  "Murphy",
  "Cook",
  "Rogers",
  "Gutierrez",
  "Ortiz",
  "Morgan",
  "Cooper",
  "Peterson",
  "Bailey",
  "Reed",
  "Kelly",
  "Howard",
  "Ramos",
  "Kim",
  "Cox",
  "Ward",
  "Richardson",
];

const companies = [
  "Acme Corp",
  "TechStart Inc",
  "Global Solutions",
  "Innovation Labs",
  "Enterprise Systems",
  "Digital Dynamics",
  "CloudTech Solutions",
  "Future Innovations",
  "DataFlow Inc",
  "Smart Systems",
  "NextGen Technologies",
  "Alpha Industries",
  "Beta Solutions",
  "Gamma Corp",
  "Delta Systems",
  "Epsilon Labs",
  "Zeta Technologies",
  "Eta Innovations",
  "Theta Solutions",
  "Iota Systems",
  "Kappa Corp",
  "Lambda Labs",
  "Mu Technologies",
  "Nu Solutions",
  "Xi Systems",
  "Omicron Corp",
  "Pi Labs",
  "Rho Technologies",
  "Sigma Solutions",
  "Tau Systems",
  "Upsilon Corp",
  "Phi Labs",
  "Chi Technologies",
  "Psi Solutions",
  "Omega Systems",
  "Quantum Corp",
  "Rocket Labs",
  "Stellar Technologies",
  "Nebula Solutions",
  "Galaxy Systems",
  "Cosmic Corp",
  "Stellar Labs",
  "Aurora Technologies",
  "Nova Solutions",
  "Pulsar Systems",
  "Quasar Corp",
  "Meteor Labs",
  "Comet Technologies",
  "Asteroid Solutions",
  "Planet Systems",
  "Solar Corp",
  "Lunar Labs",
  "Martian Technologies",
  "Venus Solutions",
  "Jupiter Systems",
  "Saturn Corp",
  "Uranus Labs",
  "Neptune Technologies",
  "Pluto Solutions",
  "Mercury Systems",
  "Venus Corp",
  "Earth Labs",
  "Mars Technologies",
  "Jupiter Solutions",
  "Saturn Systems",
  "Uranus Corp",
  "Neptune Labs",
  "Pluto Technologies",
  "Mercury Solutions",
  "Venus Systems",
  "Earth Corp",
  "Mars Labs",
  "Jupiter Technologies",
  "Saturn Solutions",
  "Uranus Systems",
  "Neptune Corp",
  "Pluto Labs",
  "Mercury Technologies",
  "Venus Solutions",
  "Earth Systems",
  "Mars Corp",
  "Jupiter Labs",
  "Saturn Technologies",
  "Uranus Solutions",
  "Neptune Systems",
  "Pluto Corp",
  "Mercury Labs",
  "Venus Technologies",
  "Earth Solutions",
  "Mars Systems",
];

const sources = Object.values(LeadSource);
const statuses = Object.values(LeadStatus);

const generateEmail = (
  firstName: string,
  lastName: string,
  company: string
): string => {
  const domain =
    company
      .toLowerCase()
      .replace(/\s+/g, "")
      .replace(/[^a-z0-9]/g, "") + ".com";
  return `${firstName.toLowerCase()}.${lastName.toLowerCase()}@${domain}`;
};

export const generateMockLeads = (count: number = 100): Lead[] => {
  const leads: Lead[] = [];

  for (let i = 0; i < count; i++) {
    const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];
    const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];
    const company = companies[Math.floor(Math.random() * companies.length)];
    const source = sources[Math.floor(Math.random() * sources.length)];
    const status = statuses[Math.floor(Math.random() * statuses.length)];
    const score = Math.floor(Math.random() * 41) + 60; // 60-100 range

    const lead = createLead({
      id: (i + 1).toString(),
      name: `${firstName} ${lastName}`,
      company,
      email: generateEmail(firstName, lastName, company),
      source,
      score,
      status,
      createdAt: new Date(
        Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000
      ).toISOString(),
      updatedAt: new Date(
        Date.now() - Math.random() * 7 * 24 * 60 * 60 * 1000
      ).toISOString(),
    });

    leads.push(lead);
  }

  return leads;
};
